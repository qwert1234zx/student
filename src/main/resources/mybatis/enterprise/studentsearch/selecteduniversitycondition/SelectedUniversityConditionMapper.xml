<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="universityrecruit.enterprise.studentsearch.selecteduniversitycondition.dao.EntStuSelectedUniversityConditionMapper" >
  <resultMap id="BaseResultMap" type="universityrecruit.enterprise.studentsearch.selecteduniversitycondition.entity.SelectedUniversityCondition" >
	
	<id column="SelectedUniversityConditionID" property="SelectedUniversityConditionID" jdbcType="INTEGER"/>
	<result column="SelectedUniversityID" property="SelectedUniversityID" jdbcType="INTEGER"/>
	<result column="EnterpriseQueryConditionID" property="EnterpriseQueryConditionID" jdbcType="INTEGER"/>

  </resultMap>
  
  <sql id="Base_Column_List">
	SelectedUniversityConditionID,SelectedUniversityID,EnterpriseQueryConditionID
  </sql>

  <!--因为采用AJAX通过Map<String,Object>进行传参，所以主键为String，用下面简洁的方式就不能实现自增，parameterType用Entity方式可以
  <insert id="insert" parameterType="map" useGeneratedKeys="true" keyProperty="TestTableId">
  -->
  <insert id="insert" parameterType="map">
    <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="SelectedUniversityConditionId">
      SELECT LAST_INSERT_ID() AS SelectedUniversityConditionId_AI
    </selectKey>
    insert into SelectedUniversityCondition(SelectedUniversityConditionID,SelectedUniversityID,EnterpriseQueryConditionID) values (#{SelectedUniversityConditionId_AI},#{SelectedUniversityID},#{EnterpriseQueryConditionID})
  </insert>
  
  <delete id="deleteByIdList" parameterType="List">
    delete from SelectedUniversityCondition where SelectedUniversityConditionId in
    <foreach collection="list" index="index" item="Ids" open="(" close=")" separator=",">
      #{Ids}
    </foreach>
  </delete>

  <update id="update" parameterType="map">
    update SelectedUniversityCondition set SelectedUniversityID=#{SelectedUniversityID},EnterpriseQueryConditionID=#{EnterpriseQueryConditionID}
    where SelectedUniversityConditionId = #{SelectedUniversityConditionId}
  </update>

  <select id="selectByID" resultMap="BaseResultMap" parameterType="Object">
    select SelectedUniversityConditionID,SelectedUniversityID,EnterpriseQueryConditionID from SelectedUniversityCondition
    where SelectedUniversityConditionId = #{SelectedUniversityConditionId}
  </select>

  <select id="selectCountByCondition" resultMap="BaseResultMap" parameterType="map">
    select count(SelectedUniversityConditionId) from SelectedUniversityCondition
	<where>
		<if test='SelectedUniversityID!=null'>
		</if>
		<if test='EnterpriseQueryConditionID!=null'>
		</if>
</where>
  </select>

  <select id="selectByCondition" resultMap="BaseResultMap" parameterType="java.util.Map">
    select SelectedUniversityConditionID,SelectedUniversityID,EnterpriseQueryConditionID from SelectedUniversityCondition
	<where>
		<if test='SelectedUniversityID!=null'>
		</if>
		<if test='EnterpriseQueryConditionID!=null'>
		</if>
</where>
  </select>
</mapper>