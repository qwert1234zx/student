<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="universityrecruit.student.interviewmanagement.interviewrecord.dao.StuIntInterviewRecordMapper" >
  <resultMap id="BaseResultMap" type="universityrecruit.student.interviewmanagement.interviewrecord.entity.InterviewRecord" >
	
	<id column="InterviewRecordID" property="InterviewRecordID" jdbcType="INTEGER"/>
	<result column="StudentRemark" property="StudentRemark" jdbcType="VARCHAR"/>
	<result column="StudentRate" property="StudentRate" jdbcType="INTEGER"/>
	<result column="InterviewerRemark" property="InterviewerRemark" jdbcType="VARCHAR"/>
	<result column="InterviewerConclusion" property="InterviewerConclusion" jdbcType="INTEGER"/>
	<result column="InterviewerMobile" property="InterviewerMobile" jdbcType="VARCHAR"/>
	<result column="Interviewer" property="Interviewer" jdbcType="VARCHAR"/>
	<result column="InterviewTime" property="InterviewTime" jdbcType="DATE"/>
	<result column="CandidateID" property="CandidateID" jdbcType="INTEGER"/>

  </resultMap>
  
  <sql id="Base_Column_List">
	InterviewRecordID,StudentRemark,StudentRate,InterviewerRemark,InterviewerConclusion,InterviewerMobile,Interviewer,InterviewTime,CandidateID
  </sql>

  <!--因为采用AJAX通过Map<String,Object>进行传参，所以主键为String，用下面简洁的方式就不能实现自增，parameterType用Entity方式可以
  <insert id="insert" parameterType="map" useGeneratedKeys="true" keyProperty="TestTableId">
  -->
  <insert id="insert" parameterType="map">
    <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="InterviewRecordId">
      SELECT LAST_INSERT_ID() AS InterviewRecordId_AI
    </selectKey>
    insert into InterviewRecord(InterviewRecordID,StudentRemark,StudentRate,InterviewerRemark,InterviewerConclusion,InterviewerMobile,Interviewer,InterviewTime,CandidateID) values (#{InterviewRecordId_AI},#{StudentRemark},#{StudentRate},#{InterviewerRemark},#{InterviewerConclusion},#{InterviewerMobile},#{Interviewer},#{InterviewTime},#{CandidateID})
  </insert>
  
  <delete id="deleteByIdList" parameterType="List">
    delete from InterviewRecord where InterviewRecordId in
    <foreach collection="list" index="index" item="Ids" open="(" close=")" separator=",">
      #{Ids}
    </foreach>
  </delete>

  <update id="update" parameterType="map">
    update InterviewRecord set StudentRemark=#{StudentRemark},StudentRate=#{StudentRate},InterviewerRemark=#{InterviewerRemark},InterviewerConclusion=#{InterviewerConclusion},InterviewerMobile=#{InterviewerMobile},Interviewer=#{Interviewer},InterviewTime=#{InterviewTime},CandidateID=#{CandidateID}
    where InterviewRecordId = #{InterviewRecordId}
  </update>

  <select id="selectByID" resultMap="BaseResultMap" parameterType="Object">
    select InterviewRecordID,StudentRemark,StudentRate,InterviewerRemark,InterviewerConclusion,InterviewerMobile,Interviewer,InterviewTime,CandidateID from InterviewRecord
    where InterviewRecordId = #{InterviewRecordId}
  </select>

  <select id="selectCountByCondition" resultMap="BaseResultMap" parameterType="map">
    select count(InterviewRecordId) from InterviewRecord
	<where>
		<if test='StudentRemark!=null'>
			 and StudentRemark like  '%' #{StudentRemark} '%'
		</if>
		<if test='StudentRate!=null'>
		</if>
		<if test='InterviewerRemark!=null'>
			 and InterviewerRemark like  '%' #{InterviewerRemark} '%'
		</if>
		<if test='InterviewerConclusion!=null'>
		</if>
		<if test='InterviewerMobile!=null'>
			 and InterviewerMobile like  '%' #{InterviewerMobile} '%'
		</if>
		<if test='Interviewer!=null'>
			 and Interviewer like  '%' #{Interviewer} '%'
		</if>
		<if test='InterviewTime!=null'>
		</if>
		<if test='CandidateID!=null'>
		</if>
</where>
  </select>

  <select id="selectByCondition" resultMap="BaseResultMap" parameterType="java.util.Map">
    select InterviewRecordID,StudentRemark,StudentRate,InterviewerRemark,InterviewerConclusion,InterviewerMobile,Interviewer,InterviewTime,CandidateID from InterviewRecord
	<where>
		<if test='StudentRemark!=null'>
			 and StudentRemark like  '%' #{StudentRemark} '%'
		</if>
		<if test='StudentRate!=null'>
		</if>
		<if test='InterviewerRemark!=null'>
			 and InterviewerRemark like  '%' #{InterviewerRemark} '%'
		</if>
		<if test='InterviewerConclusion!=null'>
		</if>
		<if test='InterviewerMobile!=null'>
			 and InterviewerMobile like  '%' #{InterviewerMobile} '%'
		</if>
		<if test='Interviewer!=null'>
			 and Interviewer like  '%' #{Interviewer} '%'
		</if>
		<if test='InterviewTime!=null'>
		</if>
		<if test='CandidateID!=null'>
		</if>
</where>
  </select>
</mapper>